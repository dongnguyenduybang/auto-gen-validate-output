{
  "method": "POST",
  "path": "/Message/SendMessage",
  "headers": {
    "Content-Type": "application/json",
    "x-session-token": "{{mockUser[0].token}}",
    "x-country-code": "VN"
  },
  "payload": {
    "workspaceId": "0",
    "channelId": "{{getChannel.isChannelId}}",
    "content": "test123123",
    "ref": "ref"
  },
  "beforeAll": [
    "mockUser(body: { prefix: 'duy12345',quantity: 2,badge: 0 }, expect: {})",
    "createChannel(body: {name: 'channel 1', workspaceId: '0'}, header: {token: '{{mockUser[0].token}}'}, expect: {isOwner: '{{mockUser[0].userId}}' } )",
    "getChannel(body: {workspaceId: '0', channelId: '{{createChannel.isChannelId}}'}, header: {token: '{{mockUser[0].token}}'}, expect: {countMember: 1, countMessage: 1, isChannelId: '{{createChannel.isChannelId}}',isLastMessage: '{{createChannel.messageId}}', isContent: '{{createChannel.isContent}}', isOwner: '{{mockUser[0].userId}}'})"
  ],
  "saga": [
    "acceptChannel_1(body: {\"linkInvitation\": \"{{getChannel_1.invitationLink}}\"}, header: {token: '{{mockUser[1].token}}'}, expect: {countMember: 2, countMessage: 1, isChannelId: '{{createChannel.isChannelId}}', isContent: '%s joined this channel' })",
    "getChannel_2(body: {workspaceId: '0', channelId: '{{createChannel.isChannelId}}'}, header: {token: '{{mockUser[0].token}}'}, expect: {countMember: 2, countMessage: 1, isChannelId: '{{createChannel.isChannelId}}',isLastMessage: '{{acceptChannel_1.isLastMessage}}', isContent: '{{acceptChannel_1.isContent}}', isOwner: '{{mockUser[0].userId}}'})",
    "sendMessage_2(body: {workspaceId: '0', channelId: '{{createChannel.isChannelId}}', content: 'user send message'}, header: {token: '{{mockUser[1].token}}'}, expect: {})",
    "getListMessage(body: { workspaceId: '0', channelId: '{{createChannel.isChannelId}}' }, header: {token: '{{mockUser[0].token}}' }, expect: {isLastMessage: '{{sendMessage_2.messageId}}', isLastContent: '{{sendMessage_2.content}}', isSender: '{{sendMessage_2.senderId}}' })",
    "deleteMessageOnlyMe_1(body: {channelId: '{{createChannel.isChannelId}}', messageId: '{{sendMessage_1.messageId}}'}, header: {token: '{{mockUser[0].token}}'})",
    "getMessage(body: {channelId: '{{createChannel.isChannelId}}', messageId: '{{sendMessage_1.messageId}}' }, header: {token: '{{mockUser[0].token}}' }, expect: {})",
    "getListMessage(body: { workspaceId: '0', channelId: '{{createChannel.isChannelId}}' }, header: {token: '{{mockUser[0].token}}' }, expect: {})"
  ]
}